name: Release

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Package application
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Build application
        run: |
          npm install
          npm run build:prod
      - name: Run tests
        run: npm run test
#     - name: Change path in test report
#       run: sed -i "s/\/home\/runner\/work\/resume\/resume\///g" coverage/tests-report.xml
#     - name: ESLint Analysis
#       run: |
#         npx eslint "src/**/*.{js,vue}" --format json --output-file coverage/eslint.json
#         npx eslint "src/**/*.{js,vue}" --format stylish
      - name: Retrieve package version
        run: grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g' > VERSION.md
      - name: Publish package to Github
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            dist/*
            coverage/*
            VERSION.md
          if-no-files-found: error
  sonarqube:
    name: SonarQube Analysis
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
      - name: Replace sonar version based on package.json
        run: |
          NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          sed -i "s/sonar.projectVersion=need-to-be-replaced/sonar.projectVersion=$NEXT_VERSION/g" sonar-project.properties
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  release:
    name: Create Release
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
      - name: Set version environment variable
        run: echo "version=$(cat VERSION.md)" >> $GITHUB_ENV
      - name: Create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: Release/${{ env.version }}
          body: |
            Auto created release based on ${{ github.workflow }}
            by : ${{ github.actor }}
            on : ${{ github.event_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

name: Integration

#on:
#  pull_request:
#    branches: [master]
#    types: [opened, synchronize]

jobs:
  test:
    name: Unit Tests
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Run unit tests
        run: |
          npm install
          npm run test
      - name: Change path in test report
        run: sed -i "s/\/home\/runner\/work\/resume\/resume\///g" coverage/tests-report.xml
      - name: ESLint scan
        run: |
          npx eslint "src/**/*.{js,vue}" --format stylish
          npx eslint "src/**/*.{js,vue}" --format json --output-file coverage/eslint.json
      - name: Check if version correct
        run: |
          CURRENT_VERSION=$(npm view @tdesaules/resume | grep latest | sed 's/\x1b\[[0-9;]*m//g' | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          tools/compare --current_version $CURRENT_VERSION --next_version $NEXT_VERSION
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: coverage/*
          if-no-files-found: error
  sonarqube:
    name: SonarQube Analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: coverage
      - name: Replace sonar version based on package.json
        run: |
          NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          sed -i "s/sonar.projectVersion=need-to-be-replaced/sonar.projectVersion=$NEXT_VERSION/g" sonar-project.properties
      - name: SonarCloud quality scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  snyk:
    name: Snyk Analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Snyk vulnerability scan
        run: |
          npm install --global snyk
          snyk auth $SNYK_TOKEN
          snyk monitor --fail-on=patchable --project-name=@github-action/resume
          snyk test --fail-on=patchable --project-name=@github-action/resume
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

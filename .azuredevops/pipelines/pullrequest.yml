name: pull request $(Date:yyyyMMdd)$(Rev:.rr)

trigger: none
pr:
  autoCancel: false
  branches:
    include: '*'
  drafts: false

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: test
    displayName: Tests
    dependsOn: []
    condition: and( eq(variables['System.PullRequest.SourceBranch'], 'develop'), eq(variables['System.PullRequest.TargetBranch'], 'master'))
    jobs:
      - job: jest
        displayName: Jest
        timeoutInMinutes: 5
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: Setup node and npm
          - script: |
              npm install
              npm run test
            displayName: Run unit tests
          - script: |
              COMMIT=$(git show --oneline | cut -d ' ' -f 3)
              sed -i "s/\/home\/runner\/work\/resume\/resume\///g" coverage/tests-report.xml
            displayName: Change path in test report
          - script: |
              npx eslint "src/**/*.{js,vue}" --format stylish
              npx eslint "src/**/*.{js,vue}" --format json --output-file coverage/eslint.json
            displayName: ESLint scan
          - script: |
              npm config set registry https://pkgs.dev.azure.com/tdesaules/resume/_packaging/packages/npm/registry/
              npm view @tdesaules/resume
              CURRENT_VERSION=$(npm view @tdesaules/resume | grep latest | sed 's/\x1b\[[0-9;]*m//g' | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
              NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
              tools/compare --current_version $CURRENT_VERSION --next_version $NEXT_VERSION
            displayName: Check if version correct
          - publish: $(System.DefaultWorkingDirectory)/coverage
            artifact: coverage
            displayName: Publish coverage artifact
  - stage: security
    displayName: Security
    dependsOn: [test]
    variables:
      - group: resume
    jobs:
      - job: snyk
        displayName: Snyk
        timeoutInMinutes: 5
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: Setup node and npm
          - script: | 
              npm install --global snyk
              snyk auth $SNYK_TOKEN
              snyk monitor --dev --fail-on=patchable --project-name=@azure-pipeline/resume-dev
              snyk test --dev --fail-on=patchable --project-name=@azure-pipeline/resume-dev
            displayName: Install Snyk and analyze
            env:
              SNYK_TOKEN: $(SNYK_TOKEN)
      - job: deepcode
        displayName: DeepCode
        timeoutInMinutes: 5
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8' 
              addToPath: true 
          - script: |
              python -m pip install deepcode
              deepcode analyze --path $(System.DefaultWorkingDirectory) --with-linters
            displayName: Deepcode
            env:
              DEEPCODE_API_KEY: $(DEEPCODE_TOKEN)

name: tags $(Date:yyyyMMdd)$(Rev:.rr)

trigger:
  tags:
    include:
      - azuredevops_*
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: resume

stages:
  - stage: download
    displayName: Download
    dependsOn: []
    jobs:
      - job: release
        displayName: Release
        timeoutInMinutes: 5
        variables:
          - name: version
            value: null
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: checkout repository
          - script: |
              grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g' > $(System.DefaultWorkingDirectory)/VERSION.md
              VERSION=$(cat "$(System.DefaultWorkingDirectory)/version/VERSION.md")
              echo "##vso[task.setvariable variable=version]$VERSION"
            displayName: create version variable
          - task: DownloadGitHubRelease@0
            inputs:
              connection: github.com_tdesaules
              userRepository: tdesaules/resume
              defaultVersionType: specificTag
              version: azuredevops_$(version)
              downloadPath: $(System.DefaultWorkingDirectory)
            displayName: download lasted release
          - script: |
              mkdir dist
              tar -zxvf dist.tar.gz -C dist
            displayName: extract dist archive
          - publish: $(System.DefaultWorkingDirectory)/dist
            artifact: dist
            displayName: publish dist
  - stage: deploy
    displayName: Deploy
    dependsOn: [download]
    jobs:
      - job: netlify
        displayName: Netlify
        timeoutInMinutes: 5
        steps:
          - checkout: none
          - download: current
            artifact: dist
            displayName: download dist
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: setup node and npm
          - script: |
              npm install --global netlify-cli
              netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir $(Pipeline.Workspace)/dist --prod
            displayName: install netlify cli and deploy
            env:
              NETLIFY_AUTH_TOKEN: $(NETLIFY_AUTH_TOKEN)
              NETLIFY_SITE_ID: $(NETLIFY_SITE_ID_PROD)
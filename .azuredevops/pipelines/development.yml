name: Development $(Date:yyyyMMdd)$(Rev:.rr)

trigger:
  branches:
    include: [ develop ]
pr: none

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    displayName: Build
    dependsOn: []
    jobs:
      - job: resume_development
        displayName: Resume dev
        timeoutInMinutes: 5
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: Setup node and npm
          - script: |
              npm install
              npm run build:dev
            displayName: Build dev
          - publish: $(System.DefaultWorkingDirectory)/dist
            artifact: dist
            displayName: Publish artifact
  - stage: 
    displayName: Code Quality
    dependsOn: [ build ]
    variables:
      - group: resume
    jobs:
      - job: Codacy
        displayName: Run code quality gateway
        timeoutInMinutes: 10
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - script: |
              curl -L https://github.com/codacy/codacy-analysis-cli/archive/master.tar.gz | tar xvz
              cd codacy-analysis-cli-* && sudo make install
            displayName: Download and install Codacy
          - script: |
              COMMIT=$(git show --oneline | cut -d ' ' -f 3)
              codacy-analysis-cli analyze --commit-uuid $COMMIT --directory $(System.DefaultWorkingDirectory) --username $CODACY_USER --project $CODACY_PROJECT --api-token $CODACY_TOKEN --allow-network --verbose --upload
            displayName: Codacy analysis
            env:
              CODACY_USER: $(CODACY_USER)
              CODACY_PROJECT: $(CODACY_PROJECT)
              CODACY_TOKEN: $(CODACY_CLI_TOKEN)

  - stage: security
    displayName: Security
    dependsOn: [build]
    variables:
      - group: resume
    jobs:
      - job: snyk
        displayName: Snyk
        timeoutInMinutes: 5
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: Checkout repository
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: Setup node and npm
          - script: | 
              npm install --global snyk
              snyk auth $SNYK_TOKEN
              snyk monitor --dev --fail-on=patchable --project-name=@azure-pipeline/resume-dev
              snyk test --dev --fail-on=patchable --project-name=@azure-pipeline/resume-dev
            displayName: Install Snyk and analyze
            env:
              SNYK_TOKEN: $(SNYK_TOKEN)
  - stage: deploy
    displayName: Deploy
    dependsOn: [ security ]
    variables:
      - group: resume
    jobs:
      - job: netlify
        displayName: Netlify
        timeoutInMinutes: 5
        steps:
          - checkout: none
          - download: current
            artifact: dist
            displayName: Download artifact
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: Setup node
          - script: |
              npm install --global netlify-cli
              netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir $(Pipeline.Workspace)/dist --prod
            displayName: Install Netlify cli and deploy
            env:
              NETLIFY_AUTH_TOKEN: $(NETLIFY_AUTH_TOKEN)
              NETLIFY_SITE_ID: $(NETLIFY_SITE_ID_DEV)
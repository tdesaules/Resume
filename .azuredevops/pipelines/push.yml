name: push $(Date:yyyyMMdd)$(Rev:.rr)

trigger:
  branches:
    include: ['*']
pr: none

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build
    displayName: Build
    dependsOn: []
    jobs:
      - job: dev
        displayName: Dev
        timeoutInMinutes: 5
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
        steps:
          - checkout: self
            fetchDepth: 0
            displayName: checkout repository
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: setup node and npm
          - script: |
              npm install
              npm run build:dev
            displayName: build with npm for dev
          - publish: $(System.DefaultWorkingDirectory)/dist
            artifact: dist
            displayName: publish dist artifact
  - stage: netlify
    displayName: Netlify
    dependsOn: [build]
    variables:
      - group: resume
    jobs:
      - job: dev
        displayName: Dev
        timeoutInMinutes: 5
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
        steps:
          - checkout: none
          - download: current
            artifact: dist
            displayName: download artifact
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: setup node and npm
          - script: |
              npm install --global netlify-cli
              netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir $(Pipeline.Workspace)/dist --prod
            displayName: install netlify cli and deploy
            env:
              NETLIFY_AUTH_TOKEN: $(NETLIFY_AUTH_TOKEN)
              NETLIFY_SITE_ID: $(NETLIFY_SITE_ID_DEV)